{
    "$schema": "http://mgi.nist.gov/mgi-json-trans/v0.1",
    "transforms": {
        "$lb": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/LiteralTransform" ],
            "type": "literal",
            "value": "{",
            "expects": ["any"],
            "returns": "string"
        },
        "$rb": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/LiteralTransform" ],
            "type": "literal",
            "value": "}",
            "expects": ["any"],
            "returns": "string"
        },
        "tostr": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.tostr",
            "description": "convert input data to a string",
            "argv_supported": [
                {
                    "name": "data",
                    "description": "the data to convert (default: the current input data)",
                    "type": "any"
                }
            ],
            "expects": ["any"],
            "returns": "string"
        },
        "indent": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.indent",
            "description": "prepend a specified number of spaces in front of the input text.",
            "argv_supported": [
                {
                    "name": "indlen",
                    "description": "the number of spaces to insert at the front of the text",
                    "type": "string"
                },
                {
                    "name": "data",
                    "description": "the data to indent (default: the current input data)",
                    "type": "any"
                }
            ],
            "expects": ["string"],
            "returns": "string"
        },
        "fill": {
            "type": "apply",
            "transform": "newline",
            "input": {
                "type": "apply",
                "transform": {
                    "type": "map",
                    "itemmap": "indent(5)"
                },
                "input": "wrap(70)"
            }
        },
        "apply": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.applytransform",
            "argv_supported": [
                {
                    "required": true,
                    "name": "transform",
                    "description": "the name of the transform to apply",
                    "type": "string"
                },
                {
                    "name": "select",
                    "description": "pointer to data to use as new input",
                    "type": "string"
                },
                {
                    "description": "extra arguments to pass to the transform implementation",
                    "type": "remaining"
                }
            ],
            "expects": ["any"],
            "returns": "any"
        },
        "extract": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/CallableTransform" ],
            "type": "callable",
            "transform_tmpl": {
                "type": "extract",
                "select": { "$val": "/0" }
            },
            "conf_args_index": [ 0 ],
            "argv_supported": [
                {
                    "required": true,
                    "name": "select",
                    "type": "string"
                }
            ],
            "expects": ["any"],
            "returns": "any"
        },
        "map": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/CallableTransform" ],
            "type": "callable",
            "transform_tmpl": {
                "type": "map",
                "itemmap": { "$val": "/0" }
            },
            "conf_args_index": [ 0 ],
            "argv_supported": [
                {
                    "name": "itemmap",
                    "type": "string"
                }
            ],
            "expects": ["array"],
            "returns": "array"            
        },
        "wrap": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.wrap",
            "description": "break text into an array of lines of limited length",
            "argv_supported": [
                {
                    "name": "maxlen",
                    "description": "the maximum length of a line in number of characters",
                    "type": "integer"
                },
                {
                    "name": "text",
                    "description": "the text to break up (default: the current input data)",
                    "type": "string"
                }
            ],
            "expects": ["string"],
            "returns": "array"
        },
        "concat": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.delimit",
            "args": [""],
            "expects": ["array"],
            "returns": "string"
        },
        "delimit": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.delimit",
            "argv_supported": [
                {
                    "name": "delim",
                    "description": "the string to use as a delimiter",
                    "type": "string"
                }
            ],
            "expects": ["array"],
            "returns": "string"
        },
        "newline": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.delimit",
            "description": "places each item on a different line",
            "args": [ "\n" ],
            "expects": ["array"],
            "returns": "string"
        },
        "doubleNewline": {
            "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/NativeTransform" ],
            "type": "native",
            "impl": "$std.delimit",
            "description": "places a blank line between each item",
            "args": [ "\n\n" ],
            "expects": ["array"],
            "returns": "string"
        }
    }
}
