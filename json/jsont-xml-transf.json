{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id":  "http://mgi.nist.gov/jsont-xml-transf/v0.1",
    "$extensionSchemas": [ "http://mgi.nist.gov/mgi-json-schema/v0.1" ],
    "title": "JSON Transformations: XML module",
    "description": "This is the schema for JSON Transformation stylesheets",
    "definitions": {

        "ToAttributeTransform": {
            "description": "a transform for generating the data for an XML attribute",
            "notes": [
                "The output of this transform is a JSON object using an internal schema (jsont-xml-schema).  It is to be combined with an Element JSON object to build up the XML data."
            ],
            "allOf": [
                { "$ref": "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/Transform" },
                {
                    "properties": {
                        "$type": {
                            "enum": [ "xml.attribute" ] 
                        },
                        "name": {
                            "description": "the local name for the element",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a {$val} object, or an anonymous transform."
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        },
                        "value": {
                            "description": "the value for the attribute",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a number, a boolean, a {$val} object, or a JSON template."
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "number" },
                                { "type": "boolean" },
                                { "type": "object" }
                            ]
                        },
                        "prefix": {
                            "description": "the prefix to use with this attribute",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a {$val} object, or an anonymous transform.",
                                "if not provided, none will be applied unless namespace is specified"
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        },
                        "namespace": {
                            "description": "the namespace that this attribute is part of",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a {$val} object, or an anonymous transform.",
                                "If provided without an associated prefix, a prefix may be generated automatically upon formatting."
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        }
                    }
                }
            ]
        },

        "ToElementContent": {
            "description": "a transform type for generating the content data of an XML element, including both the children and the attributes",
            "notes": [
                "The output of this transform is a JSON object using an internal schema (jsont-xml-schema).  It is to be combined with an Element JSON object to build up the XML data."
            ],
            "allOf": [
                { "$ref": "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/Transform" },
                {
                    "properties": {
                        "$type": {
                            "enum": [ "xml.elementContent" ] 
                        },
                        "attrs": {
                            "description": "an ordered list of the attributes",
                            "notes": [
                                "Normally, each value in the list is a transform for generating the attribute data.  This can be in the form of a JSON template, a {$val} object, a named template, or a data pointer",
                                "The order is the order they will appear in the otuput.",
                                "The behavior is undefined if two attributes have the same qualified name"
                            ],
                            "type": "array",
                            "items": {
                                "oneOf": [
                                    { "type": "string" },
                                    { "type": "object" }
                                ]
                            }
                        },
                        "children": {
                            "description": "an ordered list of the element's children",
                            "notes": [
                                "Normally, each value in the list is a transform for generating the attribute data.  This can be in the form of a JSON template, a {$val} object, a named template, or a data pointer",
                                "The order is the order they will appear in the otuput."
                            ],
                            "type": "array",
                            "items": {
                                "oneOf": [
                                    { "type": "string" },
                                    { "type": "object" }
                                ]
                            }
                        }
                    }
                }
            ]
        },

        "ToElementTransform": {
            "description": "a transform for generating the data for an XML attribute",
            "notes": [
                "The output of this transform is a JSON object using an internal schema (jsont-xml-schema).  It is to be combined with an Element JSON object to build up the XML data."
            ],
            "allOf": [
                { "$ref": "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/Transform" },
                {
                    "properties": {
                        "type": {
                            "enum": [ "xml.element" ] 
                        },
                        "name": {
                            "description": "the local name for the element",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a {$val} object, or an anonymous transform."
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        },
                        "prefix": {
                            "description": "the prefix to use with this attribute",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a {$val} object, or an anonymous transform.",
                                "if not provided, none will be applied unless namespace is specified"
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        },
                        "namespace": {
                            "description": "the namespace that this attribute is part of",
                            "notes": [
                                "This can be string (which will be treated as a template if it contains {} directives), a {$val} object, or an anonymous transform.",
                                "If provided without an associated prefix, a prefix may be generated automatically upon formatting."
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        },
                        "content": {
                            "description": "the attribute and child data contained in this element",
                            "notes": [
                                "Normally, the value is a transform that builds the builds the content data (e.g. via a transform of type=xml.elementContent",
                                ""
                            ],
                            "oneOf": [
                                { "type": "string" },
                                { "type": "object" }
                            ]
                        },
                        "prefixes": {
                            "description": "a set of namespace prefixes to define where the keys are the prefixes and the values are the namespace URIs they identify",
                            "notes": [
                                "The object will be treated like a JSON template so that the values can be generated from the input."
                            ],
                            "type": "object"
                        }
                    }
                }
            ]
        },

        "ToXMLTransform": {
            "description": "a transform to format XML data into legal XML text",
            "notes": [

            ],
            "allOf": [
                { "$ref": "http://mgi.nist.gov/mgi-json-trans/v0.1#/definitions/Transform" },
                {
                    "properties": {
                        "$type": {
                            "enum": [ "xml.print" ] 
                        },
                        "element": {
                            "description": "the root element to format",
                            "notes": [
                                "This is normally a transform for generating the element data"
                            ],
                            "oneOf": [
                                { "type": "object" },
                                { "type": "string" }
                            ]
                        },
                        "hints": {
                            "description": "XML formating parameters that can be used to guide the formatting",
                            "notes": [
                                "These parameters will override those given in the context"
                            ],
                            "type": "object"
                        }
                    }
                }
            ]
        }
    }
}
